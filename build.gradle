plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'dev.spiti.utilities'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.16'
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.1'
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

/*task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}*/

artifacts {
    archives jar
    archives sourceJar
    //archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'dev.spiti.utilities'
            artifactId 'data-reader'
            version '1.0.1'

            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }
            /*artifact(javadocJar) {
                classifier = 'javadoc'
            }*/
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Read data from Excel and CSV files'
            name 'data-reader'
            url 'https://github.com/spiti-dev/data-reader'
            organization {
                name 'dev.spiti'
                url 'https://github.com/spiti-dev'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/spiti-dev/data-reader/issues'
            }
            scm {
                url 'https://github.com/spiti-dev/data-reader'
                connection 'scm:git:git://github.com/spiti-dev/data-reader.git'
                developerConnection 'scm:git:ssh://git@github.com:spiti-dev/data-reader.git'
            }
            developers {
                developer {
                    name 'Naresh Gourishetty'
                    email 'naresh.g@spititech.com'
                };
                developer {
                    name 'spiti.dev'
                    email 'contact@spiti.dev'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
}

signing {
    sign configurations.archives
}

model {
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
